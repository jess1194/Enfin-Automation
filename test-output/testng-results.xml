<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-28T22:43:43 IST" name="Default suite" finished-at="2025-03-28T22:44:01 IST" duration-ms="17548">
    <groups>
    </groups>
    <test started-at="2025-03-28T22:43:43 IST" name="Default test" finished-at="2025-03-28T22:44:01 IST" duration-ms="17548">
      <class name="demoblaze.testsuit.DemoBlazeTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:43 IST" name="setup" finished-at="2025-03-28T22:43:46 IST" duration-ms="2871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:46 IST" name="startTest" finished-at="2025-03-28T22:43:46 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demoblaze.testsuit.DemoBlazeTests.testUserRegistration() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testUserRegistration()[pri:1, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:46 IST" name="testUserRegistration" finished-at="2025-03-28T22:43:50 IST" duration-ms="3559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:50 IST" name="captureFailure" finished-at="2025-03-28T22:43:50 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserRegistration status=SUCCESS method=DemoBlazeTests.testUserRegistration()[pri:1, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:50 IST" name="startTest" finished-at="2025-03-28T22:43:50 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demoblaze.testsuit.DemoBlazeTests.testLogin() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testLogin()[pri:2, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:50 IST" name="testLogin" finished-at="2025-03-28T22:43:52 IST" duration-ms="2412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:52 IST" name="captureFailure" finished-at="2025-03-28T22:43:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=DemoBlazeTests.testLogin()[pri:2, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:52 IST" name="startTest" finished-at="2025-03-28T22:43:52 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demoblaze.testsuit.DemoBlazeTests.testProductSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testProductSelection()[pri:3, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:52 IST" name="testProductSelection" finished-at="2025-03-28T22:43:55 IST" duration-ms="2744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductSelection -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:55 IST" name="captureFailure" finished-at="2025-03-28T22:43:55 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductSelection status=SUCCESS method=DemoBlazeTests.testProductSelection()[pri:3, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:55 IST" name="startTest" finished-at="2025-03-28T22:43:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demoblaze.testsuit.DemoBlazeTests.testCartVerification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testCartVerification()[pri:4, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:55 IST" name="testCartVerification" finished-at="2025-03-28T22:43:58 IST" duration-ms="3116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartVerification -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:58 IST" name="captureFailure" finished-at="2025-03-28T22:43:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCartVerification status=SUCCESS method=DemoBlazeTests.testCartVerification()[pri:4, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:58 IST" name="startTest" finished-at="2025-03-28T22:43:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demoblaze.testsuit.DemoBlazeTests.testCheckout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testCheckout()[pri:5, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:58 IST" name="testCheckout" finished-at="2025-03-28T22:43:59 IST" duration-ms="981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckout -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:59 IST" name="captureFailure" finished-at="2025-03-28T22:43:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckout status=SUCCESS method=DemoBlazeTests.testCheckout()[pri:5, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:59 IST" name="startTest" finished-at="2025-03-28T22:43:59 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demoblaze.testsuit.DemoBlazeTests.testLogout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testLogout()[pri:6, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:43:59 IST" name="testLogout" finished-at="2025-03-28T22:44:00 IST" duration-ms="1185" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a class="nav-link" href="#" style="display: block;" id="logout2" onclick="logOut()">...</a> is not clickable at point (736, 40). Other element would receive the click: <input type="text" class="form-control" id="name">
  (Session info: chrome=134.0.6998.178)
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6bd1bded761e370431c55c938de72101, clickElement {id=f.0B39C907507FAF230EFCF36F5F6F3370.d.1726C78052FB99457064C2C0D5B63E24.e.307}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\jesvi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57000}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57000/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (6bd1bded761e370431c55c938de72101)] -> id: logout2]
Session ID: 6bd1bded761e370431c55c938de72101]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a class="nav-link" href="#" style="display: block;" id="logout2" onclick="logOut()">...</a> is not clickable at point (736, 40). Other element would receive the click: <input type="text" class="form-control" id="name">
  (Session info: chrome=134.0.6998.178)
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6bd1bded761e370431c55c938de72101, clickElement {id=f.0B39C907507FAF230EFCF36F5F6F3370.d.1726C78052FB99457064C2C0D5B63E24.e.307}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\jesvi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57000}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57000/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (6bd1bded761e370431c55c938de72101)] -> id: logout2]
Session ID: 6bd1bded761e370431c55c938de72101
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at com.demoblaze.pages.HomePage.logout(HomePage.java:74)
at demoblaze.testsuit.DemoBlazeTests.testLogout(DemoBlazeTests.java:115)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogout -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:44:00 IST" name="captureFailure" finished-at="2025-03-28T22:44:00 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogout status=FAILURE method=DemoBlazeTests.testLogout()[pri:6, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:demoblaze.testsuit.DemoBlazeTests@10683d9d]" started-at="2025-03-28T22:44:00 IST" name="teardown" finished-at="2025-03-28T22:44:01 IST" duration-ms="414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- demoblaze.testsuit.DemoBlazeTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
